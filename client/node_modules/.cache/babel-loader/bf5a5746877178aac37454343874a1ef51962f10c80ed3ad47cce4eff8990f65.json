{"ast":null,"code":"var _jsxFileName = \"/Users/pragadish/Code Forge/client/src/pages/EditProblem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert, Spinner } from 'react-bootstrap';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport { getProblemById, updateProblem } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProblem = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    inputFormat: '',\n    outputFormat: '',\n    constraints: '',\n    difficulty: 'Medium',\n    tags: [],\n    testCases: [{\n      input: '',\n      output: '',\n      isExample: true\n    }],\n    timeLimit: 1000,\n    memoryLimit: 256,\n    isPublic: true\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [tagInput, setTagInput] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user,\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    const fetchProblem = async () => {\n      try {\n        const res = await getProblemById(id);\n\n        // Checking if user is author or admin\n        if (!isAdmin() && res.data.author._id !== user._id) {\n          toast.error('You are not authorized to edit this problem');\n          navigate(`/problems/${id}`);\n          return;\n        }\n        setFormData({\n          title: res.data.title,\n          description: res.data.description,\n          inputFormat: res.data.inputFormat,\n          outputFormat: res.data.outputFormat,\n          constraints: res.data.constraints,\n          difficulty: res.data.difficulty,\n          tags: res.data.tags,\n          testCases: res.data.testCases,\n          timeLimit: res.data.timeLimit,\n          memoryLimit: res.data.memoryLimit,\n          isPublic: res.data.isPublic\n        });\n      } catch (error) {\n        console.error('Error fetching problem:', error);\n        toast.error('Failed to load problem');\n        navigate('/problems');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProblem();\n  }, [id, navigate, user, isAdmin]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Clearing error when user types\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n  const handleTagInputChange = e => {\n    setTagInput(e.target.value);\n  };\n  const handleAddTag = () => {\n    if (tagInput.trim() && !formData.tags.includes(tagInput.trim())) {\n      setFormData({\n        ...formData,\n        tags: [...formData.tags, tagInput.trim()]\n      });\n      setTagInput('');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && tagInput.trim()) {\n      e.preventDefault();\n      handleAddTag();\n    }\n  };\n  const handleRemoveTag = tagToRemove => {\n    setFormData({\n      ...formData,\n      tags: formData.tags.filter(tag => tag !== tagToRemove)\n    });\n  };\n  const handleTestCaseChange = (index, field, value) => {\n    const newTestCases = [...formData.testCases];\n    newTestCases[index] = {\n      ...newTestCases[index],\n      [field]: value\n    };\n    setFormData({\n      ...formData,\n      testCases: newTestCases\n    });\n\n    // Clearing error\n    if (errors[`testCases.${index}.${field}`]) {\n      setErrors({\n        ...errors,\n        [`testCases.${index}.${field}`]: ''\n      });\n    }\n  };\n  const handleAddTestCase = () => {\n    setFormData({\n      ...formData,\n      testCases: [...formData.testCases, {\n        input: '',\n        output: '',\n        isExample: false\n      }]\n    });\n  };\n  const handleRemoveTestCase = index => {\n    if (formData.testCases.length > 1) {\n      const newTestCases = formData.testCases.filter((_, i) => i !== index);\n      setFormData({\n        ...formData,\n        testCases: newTestCases\n      });\n    }\n  };\n  const handleToggleExample = index => {\n    const newTestCases = [...formData.testCases];\n    newTestCases[index] = {\n      ...newTestCases[index],\n      isExample: !newTestCases[index].isExample\n    };\n    setFormData({\n      ...formData,\n      testCases: newTestCases\n    });\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    }\n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required';\n    }\n    if (!formData.inputFormat.trim()) {\n      newErrors.inputFormat = 'Input format is required';\n    }\n    if (!formData.outputFormat.trim()) {\n      newErrors.outputFormat = 'Output format is required';\n    }\n    if (!formData.constraints.trim()) {\n      newErrors.constraints = 'Constraints are required';\n    }\n\n    // Validating test cases\n    formData.testCases.forEach((testCase, index) => {\n      if (!testCase.input.trim()) {\n        newErrors[`testCases.${index}.input`] = 'Input is required';\n      }\n      if (!testCase.output.trim()) {\n        newErrors[`testCases.${index}.output`] = 'Output is required';\n      }\n    });\n\n    // Ensuring at least one example test case\n    const hasExample = formData.testCases.some(tc => tc.isExample);\n    if (!hasExample) {\n      newErrors.testCases = 'At least one test case must be marked as an example';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      setIsSubmitting(true);\n      try {\n        await updateProblem(id, formData);\n        toast.success('Problem updated successfully!');\n        navigate(`/problems/${id}`);\n      } catch (error) {\n        console.error('Error updating problem:', error);\n        toast.error('Failed to update problem. Please try again.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    } else {\n      // Scrolling to first error\n      const firstErrorField = Object.keys(errors)[0];\n      if (firstErrorField) {\n        const element = document.getElementsByName(firstErrorField)[0];\n        if (element) {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center'\n          });\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: \"Loading problem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit Problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Update problem details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: `/problems/${id}`,\n          variant: \"outline-secondary\",\n          children: \"Back to Problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleChange,\n              isInvalid: !!errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Difficulty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"difficulty\",\n                  value: formData.difficulty,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Easy\",\n                    children: \"Easy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Medium\",\n                    children: \"Medium\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Hard\",\n                    children: \"Hard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Time Limit (ms)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"timeLimit\",\n                  value: formData.timeLimit,\n                  onChange: handleChange,\n                  min: \"100\",\n                  max: \"10000\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Memory Limit (MB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"memoryLimit\",\n                  value: formData.memoryLimit,\n                  onChange: handleChange,\n                  min: \"16\",\n                  max: \"512\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: tagInput,\n                onChange: handleTagInputChange,\n                onKeyDown: handleKeyDown,\n                placeholder: \"Add relevant tags (e.g., arrays, dynamic-programming)\",\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleAddTag,\n                variant: \"outline-primary\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: formData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"problem-tag\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => handleRemoveTag(tag),\n                children: [tag, \" \\xD7\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Make problem public\",\n              name: \"isPublic\",\n              checked: formData.isPublic,\n              onChange: e => setFormData({\n                ...formData,\n                isPublic: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleChange,\n              rows: 5,\n              isInvalid: !!errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"You can use Markdown syntax for formatting.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Input Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"inputFormat\",\n              value: formData.inputFormat,\n              onChange: handleChange,\n              rows: 3,\n              isInvalid: !!errors.inputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.inputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Output Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"outputFormat\",\n              value: formData.outputFormat,\n              onChange: handleChange,\n              rows: 3,\n              isInvalid: !!errors.outputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.outputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Constraints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"constraints\",\n              value: formData.constraints,\n              onChange: handleChange,\n              rows: 3,\n              isInvalid: !!errors.constraints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.constraints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddTestCase,\n            variant: \"outline-primary\",\n            size: \"sm\",\n            children: \"Add Test Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [errors.testCases && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"mb-4\",\n            children: errors.testCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), formData.testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4 border\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Test Case #\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Example\",\n                  checked: testCase.isExample,\n                  onChange: () => handleToggleExample(index),\n                  inline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  onClick: () => handleRemoveTestCase(index),\n                  disabled: formData.testCases.length <= 1,\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  value: testCase.input,\n                  onChange: e => handleTestCaseChange(index, 'input', e.target.value),\n                  rows: 3,\n                  isInvalid: !!errors[`testCases.${index}.input`]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors[`testCases.${index}.input`]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Expected Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  value: testCase.output,\n                  onChange: e => handleTestCaseChange(index, 'output', e.target.value),\n                  rows: 3,\n                  isInvalid: !!errors[`testCases.${index}.output`]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors[`testCases.${index}.output`]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: () => navigate(`/problems/${id}`),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Saving...' : 'Save Changes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProblem, \"ssJp74M8mBzuiRXGBBXmJdli1qA=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = EditProblem;\nexport default EditProblem;\nvar _c;\n$RefreshReg$(_c, \"EditProblem\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","Alert","Spinner","useNavigate","useParams","Link","getProblemById","updateProblem","useAuth","toast","jsxDEV","_jsxDEV","EditProblem","_s","formData","setFormData","title","description","inputFormat","outputFormat","constraints","difficulty","tags","testCases","input","output","isExample","timeLimit","memoryLimit","isPublic","errors","setErrors","isSubmitting","setIsSubmitting","loading","setLoading","tagInput","setTagInput","id","navigate","user","isAdmin","fetchProblem","res","data","author","_id","error","console","handleChange","e","name","value","target","handleTagInputChange","handleAddTag","trim","includes","handleKeyDown","key","preventDefault","handleRemoveTag","tagToRemove","filter","tag","handleTestCaseChange","index","field","newTestCases","handleAddTestCase","handleRemoveTestCase","length","_","i","handleToggleExample","validateForm","newErrors","forEach","testCase","hasExample","some","tc","Object","keys","handleSubmit","success","firstErrorField","element","document","getElementsByName","scrollIntoView","behavior","block","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","xs","as","to","variant","onSubmit","Header","Body","Group","Label","Control","type","onChange","isInvalid","Feedback","md","Select","min","max","onKeyDown","placeholder","onClick","map","style","cursor","Check","label","checked","rows","Text","size","inline","disabled","_c","$RefreshReg$"],"sources":["/Users/pragadish/Code Forge/client/src/pages/EditProblem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert, Spinner } from 'react-bootstrap';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport { getProblemById, updateProblem } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { toast } from 'react-toastify';\n\nconst EditProblem = () => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    inputFormat: '',\n    outputFormat: '',\n    constraints: '',\n    difficulty: 'Medium',\n    tags: [],\n    testCases: [\n      { input: '', output: '', isExample: true }\n    ],\n    timeLimit: 1000,\n    memoryLimit: 256,\n    isPublic: true\n  });\n  \n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [tagInput, setTagInput] = useState('');\n  \n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user, isAdmin } = useAuth();\n  \n  useEffect(() => {\n    const fetchProblem = async () => {\n      try {\n        const res = await getProblemById(id);\n        \n        // Checking if user is author or admin\n        if (\n          !isAdmin() && \n          res.data.author._id !== user._id\n        ) {\n          toast.error('You are not authorized to edit this problem');\n          navigate(`/problems/${id}`);\n          return;\n        }\n        \n        setFormData({\n          title: res.data.title,\n          description: res.data.description,\n          inputFormat: res.data.inputFormat,\n          outputFormat: res.data.outputFormat,\n          constraints: res.data.constraints,\n          difficulty: res.data.difficulty,\n          tags: res.data.tags,\n          testCases: res.data.testCases,\n          timeLimit: res.data.timeLimit,\n          memoryLimit: res.data.memoryLimit,\n          isPublic: res.data.isPublic\n        });\n      } catch (error) {\n        console.error('Error fetching problem:', error);\n        toast.error('Failed to load problem');\n        navigate('/problems');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchProblem();\n  }, [id, navigate, user, isAdmin]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n    \n    // Clearing error when user types\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: '' });\n    }\n  };\n  \n  const handleTagInputChange = (e) => {\n    setTagInput(e.target.value);\n  };\n  \n  const handleAddTag = () => {\n    if (tagInput.trim() && !formData.tags.includes(tagInput.trim())) {\n      setFormData({\n        ...formData,\n        tags: [...formData.tags, tagInput.trim()]\n      });\n      setTagInput('');\n    }\n  };\n  \n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && tagInput.trim()) {\n      e.preventDefault();\n      handleAddTag();\n    }\n  };\n  \n  const handleRemoveTag = (tagToRemove) => {\n    setFormData({\n      ...formData,\n      tags: formData.tags.filter(tag => tag !== tagToRemove)\n    });\n  };\n  \n  const handleTestCaseChange = (index, field, value) => {\n    const newTestCases = [...formData.testCases];\n    newTestCases[index] = { ...newTestCases[index], [field]: value };\n    \n    setFormData({\n      ...formData,\n      testCases: newTestCases\n    });\n    \n    // Clearing error\n    if (errors[`testCases.${index}.${field}`]) {\n      setErrors({\n        ...errors,\n        [`testCases.${index}.${field}`]: ''\n      });\n    }\n  };\n  \n  const handleAddTestCase = () => {\n    setFormData({\n      ...formData,\n      testCases: [...formData.testCases, { input: '', output: '', isExample: false }]\n    });\n  };\n  \n  const handleRemoveTestCase = (index) => {\n    if (formData.testCases.length > 1) {\n      const newTestCases = formData.testCases.filter((_, i) => i !== index);\n      setFormData({\n        ...formData,\n        testCases: newTestCases\n      });\n    }\n  };\n  \n  const handleToggleExample = (index) => {\n    const newTestCases = [...formData.testCases];\n    newTestCases[index] = {\n      ...newTestCases[index],\n      isExample: !newTestCases[index].isExample\n    };\n    \n    setFormData({\n      ...formData,\n      testCases: newTestCases\n    });\n  };\n  \n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    }\n    \n    if (!formData.description.trim()) {\n      newErrors.description = 'Description is required';\n    }\n    \n    if (!formData.inputFormat.trim()) {\n      newErrors.inputFormat = 'Input format is required';\n    }\n    \n    if (!formData.outputFormat.trim()) {\n      newErrors.outputFormat = 'Output format is required';\n    }\n    \n    if (!formData.constraints.trim()) {\n      newErrors.constraints = 'Constraints are required';\n    }\n    \n    // Validating test cases\n    formData.testCases.forEach((testCase, index) => {\n      if (!testCase.input.trim()) {\n        newErrors[`testCases.${index}.input`] = 'Input is required';\n      }\n      \n      if (!testCase.output.trim()) {\n        newErrors[`testCases.${index}.output`] = 'Output is required';\n      }\n    });\n    \n    // Ensuring at least one example test case\n    const hasExample = formData.testCases.some(tc => tc.isExample);\n    if (!hasExample) {\n      newErrors.testCases = 'At least one test case must be marked as an example';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      setIsSubmitting(true);\n      \n      try {\n        await updateProblem(id, formData);\n        toast.success('Problem updated successfully!');\n        navigate(`/problems/${id}`);\n      } catch (error) {\n        console.error('Error updating problem:', error);\n        toast.error('Failed to update problem. Please try again.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    } else {\n      // Scrolling to first error\n      const firstErrorField = Object.keys(errors)[0];\n      if (firstErrorField) {\n        const element = document.getElementsByName(firstErrorField)[0];\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n      }\n    }\n  };\n  \n  if (loading) {\n    return (\n      <Container className=\"py-5 text-center\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n        <p className=\"mt-3\">Loading problem...</p>\n      </Container>\n    );\n  }\n  \n  return (\n    <Container className=\"py-4\">\n      <Row className=\"mb-4\">\n        <Col>\n          <h1>Edit Problem</h1>\n          <p className=\"text-muted\">Update problem details</p>\n        </Col>\n        <Col xs=\"auto\">\n          <Button\n            as={Link}\n            to={`/problems/${id}`}\n            variant=\"outline-secondary\"\n          >\n            Back to Problem\n          </Button>\n        </Col>\n      </Row>\n      \n      <Form onSubmit={handleSubmit}>\n        <Card className=\"mb-4\">\n          <Card.Header>Basic Information</Card.Header>\n          <Card.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                value={formData.title}\n                onChange={handleChange}\n                isInvalid={!!errors.title}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>\n            </Form.Group>\n            \n            <Row>\n              <Col md={4}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Difficulty</Form.Label>\n                  <Form.Select\n                    name=\"difficulty\"\n                    value={formData.difficulty}\n                    onChange={handleChange}\n                  >\n                    <option value=\"Easy\">Easy</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Hard\">Hard</option>\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              \n              <Col md={4}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Time Limit (ms)</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"timeLimit\"\n                    value={formData.timeLimit}\n                    onChange={handleChange}\n                    min=\"100\"\n                    max=\"10000\"\n                  />\n                </Form.Group>\n              </Col>\n              \n              <Col md={4}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Memory Limit (MB)</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"memoryLimit\"\n                    value={formData.memoryLimit}\n                    onChange={handleChange}\n                    min=\"16\"\n                    max=\"512\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>Tags</Form.Label>\n              <div className=\"d-flex\">\n                <Form.Control\n                  type=\"text\"\n                  value={tagInput}\n                  onChange={handleTagInputChange}\n                  onKeyDown={handleKeyDown}\n                  placeholder=\"Add relevant tags (e.g., arrays, dynamic-programming)\"\n                  className=\"me-2\"\n                />\n                <Button onClick={handleAddTag} variant=\"outline-primary\">\n                  Add\n                </Button>\n              </div>\n              <div className=\"mt-2\">\n                {formData.tags.map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"problem-tag\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => handleRemoveTag(tag)}\n                  >\n                    {tag} &times;\n                  </span>\n                ))}\n              </div>\n            </Form.Group>\n            \n            <Form.Group className=\"mb-0\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Make problem public\"\n                name=\"isPublic\"\n                checked={formData.isPublic}\n                onChange={(e) => setFormData({ ...formData, isPublic: e.target.checked })}\n              />\n            </Form.Group>\n          </Card.Body>\n        </Card>\n        \n        <Card className=\"mb-4\">\n          <Card.Header>Problem Description</Card.Header>\n          <Card.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleChange}\n                rows={5}\n                isInvalid={!!errors.description}\n              />\n              <Form.Text className=\"text-muted\">\n                You can use Markdown syntax for formatting.\n              </Form.Text>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Form.Group>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>Input Format</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"inputFormat\"\n                value={formData.inputFormat}\n                onChange={handleChange}\n                rows={3}\n                isInvalid={!!errors.inputFormat}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.inputFormat}\n              </Form.Control.Feedback>\n            </Form.Group>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>Output Format</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"outputFormat\"\n                value={formData.outputFormat}\n                onChange={handleChange}\n                rows={3}\n                isInvalid={!!errors.outputFormat}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.outputFormat}\n              </Form.Control.Feedback>\n            </Form.Group>\n            \n            <Form.Group className=\"mb-0\">\n              <Form.Label>Constraints</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"constraints\"\n                value={formData.constraints}\n                onChange={handleChange}\n                rows={3}\n                isInvalid={!!errors.constraints}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.constraints}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Card.Body>\n        </Card>\n        \n        <Card className=\"mb-4\">\n          <Card.Header className=\"d-flex justify-content-between align-items-center\">\n            <span>Test Cases</span>\n            <Button onClick={handleAddTestCase} variant=\"outline-primary\" size=\"sm\">\n              Add Test Case\n            </Button>\n          </Card.Header>\n          <Card.Body>\n            {errors.testCases && (\n              <Alert variant=\"danger\" className=\"mb-4\">\n                {errors.testCases}\n              </Alert>\n            )}\n            \n            {formData.testCases.map((testCase, index) => (\n              <Card key={index} className=\"mb-4 border\">\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                  <h6 className=\"mb-0\">Test Case #{index + 1}</h6>\n                  <div className=\"d-flex align-items-center\">\n                    <Form.Check\n                      type=\"checkbox\"\n                      label=\"Example\"\n                      checked={testCase.isExample}\n                      onChange={() => handleToggleExample(index)}\n                      inline\n                    />\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={() => handleRemoveTestCase(index)}\n                      disabled={formData.testCases.length <= 1}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Card.Body>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Input</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      value={testCase.input}\n                      onChange={(e) => handleTestCaseChange(index, 'input', e.target.value)}\n                      rows={3}\n                      isInvalid={!!errors[`testCases.${index}.input`]}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors[`testCases.${index}.input`]}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  \n                  <Form.Group className=\"mb-0\">\n                    <Form.Label>Expected Output</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      value={testCase.output}\n                      onChange={(e) => handleTestCaseChange(index, 'output', e.target.value)}\n                      rows={3}\n                      isInvalid={!!errors[`testCases.${index}.output`]}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors[`testCases.${index}.output`]}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Card.Body>\n              </Card>\n            ))}\n          </Card.Body>\n        </Card>\n        \n        <div className=\"d-flex justify-content-between\">\n          <Button\n            variant=\"outline-secondary\"\n            onClick={() => navigate(`/problems/${id}`)}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Saving...' : 'Save Changes'}\n          </Button>\n        </div>\n      </Form>\n    </Container>\n  );\n};\n\nexport default EditProblem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,QAAQ,iBAAiB;AACzF,SAASC,WAAW,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,SAASC,cAAc,EAAEC,aAAa,QAAQ,iBAAiB;AAC/D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IACvCuB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,CACT;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAC3C;IACDC,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE,GAAG;IAChBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAE6C;EAAG,CAAC,GAAGlC,SAAS,CAAC,CAAC;EAC1B,MAAMmC,QAAQ,GAAGpC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEqC,IAAI;IAAEC;EAAQ,CAAC,GAAGjC,OAAO,CAAC,CAAC;EAEnCd,SAAS,CAAC,MAAM;IACd,MAAMgD,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMrC,cAAc,CAACgC,EAAE,CAAC;;QAEpC;QACA,IACE,CAACG,OAAO,CAAC,CAAC,IACVE,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,GAAG,KAAKN,IAAI,CAACM,GAAG,EAChC;UACArC,KAAK,CAACsC,KAAK,CAAC,6CAA6C,CAAC;UAC1DR,QAAQ,CAAC,aAAaD,EAAE,EAAE,CAAC;UAC3B;QACF;QAEAvB,WAAW,CAAC;UACVC,KAAK,EAAE2B,GAAG,CAACC,IAAI,CAAC5B,KAAK;UACrBC,WAAW,EAAE0B,GAAG,CAACC,IAAI,CAAC3B,WAAW;UACjCC,WAAW,EAAEyB,GAAG,CAACC,IAAI,CAAC1B,WAAW;UACjCC,YAAY,EAAEwB,GAAG,CAACC,IAAI,CAACzB,YAAY;UACnCC,WAAW,EAAEuB,GAAG,CAACC,IAAI,CAACxB,WAAW;UACjCC,UAAU,EAAEsB,GAAG,CAACC,IAAI,CAACvB,UAAU;UAC/BC,IAAI,EAAEqB,GAAG,CAACC,IAAI,CAACtB,IAAI;UACnBC,SAAS,EAAEoB,GAAG,CAACC,IAAI,CAACrB,SAAS;UAC7BI,SAAS,EAAEgB,GAAG,CAACC,IAAI,CAACjB,SAAS;UAC7BC,WAAW,EAAEe,GAAG,CAACC,IAAI,CAAChB,WAAW;UACjCC,QAAQ,EAAEc,GAAG,CAACC,IAAI,CAACf;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CtC,KAAK,CAACsC,KAAK,CAAC,wBAAwB,CAAC;QACrCR,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,EAAE,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,CAAC,CAAC;EAEjC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCtC,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACqC,IAAI,GAAGC;IAAM,CAAC,CAAC;;IAE3C;IACA,IAAItB,MAAM,CAACqB,IAAI,CAAC,EAAE;MAChBpB,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAE,CAACqB,IAAI,GAAG;MAAG,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAMG,oBAAoB,GAAIJ,CAAC,IAAK;IAClCb,WAAW,CAACa,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAInB,QAAQ,CAACoB,IAAI,CAAC,CAAC,IAAI,CAAC1C,QAAQ,CAACQ,IAAI,CAACmC,QAAQ,CAACrB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAAC,EAAE;MAC/DzC,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXQ,IAAI,EAAE,CAAC,GAAGR,QAAQ,CAACQ,IAAI,EAAEc,QAAQ,CAACoB,IAAI,CAAC,CAAC;MAC1C,CAAC,CAAC;MACFnB,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,MAAMqB,aAAa,GAAIR,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,IAAIvB,QAAQ,CAACoB,IAAI,CAAC,CAAC,EAAE;MACxCN,CAAC,CAACU,cAAc,CAAC,CAAC;MAClBL,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMM,eAAe,GAAIC,WAAW,IAAK;IACvC/C,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXQ,IAAI,EAAER,QAAQ,CAACQ,IAAI,CAACyC,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKF,WAAW;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEf,KAAK,KAAK;IACpD,MAAMgB,YAAY,GAAG,CAAC,GAAGtD,QAAQ,CAACS,SAAS,CAAC;IAC5C6C,YAAY,CAACF,KAAK,CAAC,GAAG;MAAE,GAAGE,YAAY,CAACF,KAAK,CAAC;MAAE,CAACC,KAAK,GAAGf;IAAM,CAAC;IAEhErC,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXS,SAAS,EAAE6C;IACb,CAAC,CAAC;;IAEF;IACA,IAAItC,MAAM,CAAC,aAAaoC,KAAK,IAAIC,KAAK,EAAE,CAAC,EAAE;MACzCpC,SAAS,CAAC;QACR,GAAGD,MAAM;QACT,CAAC,aAAaoC,KAAK,IAAIC,KAAK,EAAE,GAAG;MACnC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9BtD,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXS,SAAS,EAAE,CAAC,GAAGT,QAAQ,CAACS,SAAS,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC;IAChF,CAAC,CAAC;EACJ,CAAC;EAED,MAAM4C,oBAAoB,GAAIJ,KAAK,IAAK;IACtC,IAAIpD,QAAQ,CAACS,SAAS,CAACgD,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMH,YAAY,GAAGtD,QAAQ,CAACS,SAAS,CAACwC,MAAM,CAAC,CAACS,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKP,KAAK,CAAC;MACrEnD,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXS,SAAS,EAAE6C;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMM,mBAAmB,GAAIR,KAAK,IAAK;IACrC,MAAME,YAAY,GAAG,CAAC,GAAGtD,QAAQ,CAACS,SAAS,CAAC;IAC5C6C,YAAY,CAACF,KAAK,CAAC,GAAG;MACpB,GAAGE,YAAY,CAACF,KAAK,CAAC;MACtBxC,SAAS,EAAE,CAAC0C,YAAY,CAACF,KAAK,CAAC,CAACxC;IAClC,CAAC;IAEDX,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXS,SAAS,EAAE6C;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAAC9D,QAAQ,CAACE,KAAK,CAACwC,IAAI,CAAC,CAAC,EAAE;MAC1BoB,SAAS,CAAC5D,KAAK,GAAG,mBAAmB;IACvC;IAEA,IAAI,CAACF,QAAQ,CAACG,WAAW,CAACuC,IAAI,CAAC,CAAC,EAAE;MAChCoB,SAAS,CAAC3D,WAAW,GAAG,yBAAyB;IACnD;IAEA,IAAI,CAACH,QAAQ,CAACI,WAAW,CAACsC,IAAI,CAAC,CAAC,EAAE;MAChCoB,SAAS,CAAC1D,WAAW,GAAG,0BAA0B;IACpD;IAEA,IAAI,CAACJ,QAAQ,CAACK,YAAY,CAACqC,IAAI,CAAC,CAAC,EAAE;MACjCoB,SAAS,CAACzD,YAAY,GAAG,2BAA2B;IACtD;IAEA,IAAI,CAACL,QAAQ,CAACM,WAAW,CAACoC,IAAI,CAAC,CAAC,EAAE;MAChCoB,SAAS,CAACxD,WAAW,GAAG,0BAA0B;IACpD;;IAEA;IACAN,QAAQ,CAACS,SAAS,CAACsD,OAAO,CAAC,CAACC,QAAQ,EAAEZ,KAAK,KAAK;MAC9C,IAAI,CAACY,QAAQ,CAACtD,KAAK,CAACgC,IAAI,CAAC,CAAC,EAAE;QAC1BoB,SAAS,CAAC,aAAaV,KAAK,QAAQ,CAAC,GAAG,mBAAmB;MAC7D;MAEA,IAAI,CAACY,QAAQ,CAACrD,MAAM,CAAC+B,IAAI,CAAC,CAAC,EAAE;QAC3BoB,SAAS,CAAC,aAAaV,KAAK,SAAS,CAAC,GAAG,oBAAoB;MAC/D;IACF,CAAC,CAAC;;IAEF;IACA,MAAMa,UAAU,GAAGjE,QAAQ,CAACS,SAAS,CAACyD,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACvD,SAAS,CAAC;IAC9D,IAAI,CAACqD,UAAU,EAAE;MACfH,SAAS,CAACrD,SAAS,GAAG,qDAAqD;IAC7E;IAEAQ,SAAS,CAAC6C,SAAS,CAAC;IACpB,OAAOM,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACL,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMa,YAAY,GAAG,MAAOlC,CAAC,IAAK;IAChCA,CAAC,CAACU,cAAc,CAAC,CAAC;IAElB,IAAIe,YAAY,CAAC,CAAC,EAAE;MAClB1C,eAAe,CAAC,IAAI,CAAC;MAErB,IAAI;QACF,MAAM1B,aAAa,CAAC+B,EAAE,EAAExB,QAAQ,CAAC;QACjCL,KAAK,CAAC4E,OAAO,CAAC,+BAA+B,CAAC;QAC9C9C,QAAQ,CAAC,aAAaD,EAAE,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CtC,KAAK,CAACsC,KAAK,CAAC,6CAA6C,CAAC;MAC5D,CAAC,SAAS;QACRd,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC,MAAM;MACL;MACA,MAAMqD,eAAe,GAAGJ,MAAM,CAACC,IAAI,CAACrD,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9C,IAAIwD,eAAe,EAAE;QACnB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,iBAAiB,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAIC,OAAO,EAAE;UACXA,OAAO,CAACG,cAAc,CAAC;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAS,CAAC,CAAC;QACjE;MACF;IACF;EACF,CAAC;EAED,IAAI1D,OAAO,EAAE;IACX,oBACEvB,OAAA,CAAChB,SAAS;MAACkG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACrCnF,OAAA,CAACT,OAAO;QAAC6F,SAAS,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eACvCnF,OAAA;UAAMkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACVzF,OAAA;QAAGkF,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEhB;EAEA,oBACEzF,OAAA,CAAChB,SAAS;IAACkG,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBnF,OAAA,CAACf,GAAG;MAACiG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnF,OAAA,CAACd,GAAG;QAAAiG,QAAA,gBACFnF,OAAA;UAAAmF,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBzF,OAAA;UAAGkF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACNzF,OAAA,CAACd,GAAG;QAACwG,EAAE,EAAC,MAAM;QAAAP,QAAA,eACZnF,OAAA,CAACZ,MAAM;UACLuG,EAAE,EAAEjG,IAAK;UACTkG,EAAE,EAAE,aAAajE,EAAE,EAAG;UACtBkE,OAAO,EAAC,mBAAmB;UAAAV,QAAA,EAC5B;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzF,OAAA,CAACb,IAAI;MAAC2G,QAAQ,EAAErB,YAAa;MAAAU,QAAA,gBAC3BnF,OAAA,CAACX,IAAI;QAAC6F,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACpBnF,OAAA,CAACX,IAAI,CAAC0G,MAAM;UAAAZ,QAAA,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC5CzF,OAAA,CAACX,IAAI,CAAC2G,IAAI;UAAAb,QAAA,gBACRnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BzF,OAAA,CAACb,IAAI,CAACgH,OAAO;cACXC,IAAI,EAAC,MAAM;cACX5D,IAAI,EAAC,OAAO;cACZC,KAAK,EAAEtC,QAAQ,CAACE,KAAM;cACtBgG,QAAQ,EAAE/D,YAAa;cACvBgE,SAAS,EAAE,CAAC,CAACnF,MAAM,CAACd;YAAM;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;cAACH,IAAI,EAAC,SAAS;cAAAjB,QAAA,EAClChE,MAAM,CAACd;YAAK;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eAEbzF,OAAA,CAACf,GAAG;YAAAkG,QAAA,gBACFnF,OAAA,CAACd,GAAG;cAACsH,EAAE,EAAE,CAAE;cAAArB,QAAA,eACTnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;gBAACf,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;kBAAAf,QAAA,EAAC;gBAAU;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACnCzF,OAAA,CAACb,IAAI,CAACsH,MAAM;kBACVjE,IAAI,EAAC,YAAY;kBACjBC,KAAK,EAAEtC,QAAQ,CAACO,UAAW;kBAC3B2F,QAAQ,EAAE/D,YAAa;kBAAA6C,QAAA,gBAEvBnF,OAAA;oBAAQyC,KAAK,EAAC,MAAM;oBAAA0C,QAAA,EAAC;kBAAI;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClCzF,OAAA;oBAAQyC,KAAK,EAAC,QAAQ;oBAAA0C,QAAA,EAAC;kBAAM;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCzF,OAAA;oBAAQyC,KAAK,EAAC,MAAM;oBAAA0C,QAAA,EAAC;kBAAI;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAENzF,OAAA,CAACd,GAAG;cAACsH,EAAE,EAAE,CAAE;cAAArB,QAAA,eACTnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;gBAACf,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;kBAAAf,QAAA,EAAC;gBAAe;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACxCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;kBACXC,IAAI,EAAC,QAAQ;kBACb5D,IAAI,EAAC,WAAW;kBAChBC,KAAK,EAAEtC,QAAQ,CAACa,SAAU;kBAC1BqF,QAAQ,EAAE/D,YAAa;kBACvBoE,GAAG,EAAC,KAAK;kBACTC,GAAG,EAAC;gBAAO;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAENzF,OAAA,CAACd,GAAG;cAACsH,EAAE,EAAE,CAAE;cAAArB,QAAA,eACTnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;gBAACf,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;kBAAAf,QAAA,EAAC;gBAAiB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC1CzF,OAAA,CAACb,IAAI,CAACgH,OAAO;kBACXC,IAAI,EAAC,QAAQ;kBACb5D,IAAI,EAAC,aAAa;kBAClBC,KAAK,EAAEtC,QAAQ,CAACc,WAAY;kBAC5BoF,QAAQ,EAAE/D,YAAa;kBACvBoE,GAAG,EAAC,IAAI;kBACRC,GAAG,EAAC;gBAAK;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC7BzF,OAAA;cAAKkF,SAAS,EAAC,QAAQ;cAAAC,QAAA,gBACrBnF,OAAA,CAACb,IAAI,CAACgH,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACX3D,KAAK,EAAEhB,QAAS;gBAChB4E,QAAQ,EAAE1D,oBAAqB;gBAC/BiE,SAAS,EAAE7D,aAAc;gBACzB8D,WAAW,EAAC,uDAAuD;gBACnE3B,SAAS,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,eACFzF,OAAA,CAACZ,MAAM;gBAAC0H,OAAO,EAAElE,YAAa;gBAACiD,OAAO,EAAC,iBAAiB;gBAAAV,QAAA,EAAC;cAEzD;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACNzF,OAAA;cAAKkF,SAAS,EAAC,MAAM;cAAAC,QAAA,EAClBhF,QAAQ,CAACQ,IAAI,CAACoG,GAAG,CAAC,CAAC1D,GAAG,EAAEE,KAAK,kBAC5BvD,OAAA;gBAEEkF,SAAS,EAAC,aAAa;gBACvB8B,KAAK,EAAE;kBAAEC,MAAM,EAAE;gBAAU,CAAE;gBAC7BH,OAAO,EAAEA,CAAA,KAAM5D,eAAe,CAACG,GAAG,CAAE;gBAAA8B,QAAA,GAEnC9B,GAAG,EAAC,OACP;cAAA,GANOE,KAAK;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAMN,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eAEbzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,eAC1BnF,OAAA,CAACb,IAAI,CAAC+H,KAAK;cACTd,IAAI,EAAC,UAAU;cACfe,KAAK,EAAC,qBAAqB;cAC3B3E,IAAI,EAAC,UAAU;cACf4E,OAAO,EAAEjH,QAAQ,CAACe,QAAS;cAC3BmF,QAAQ,EAAG9D,CAAC,IAAKnC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEe,QAAQ,EAAEqB,CAAC,CAACG,MAAM,CAAC0E;cAAQ,CAAC;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEPzF,OAAA,CAACX,IAAI;QAAC6F,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACpBnF,OAAA,CAACX,IAAI,CAAC0G,MAAM;UAAAZ,QAAA,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC9CzF,OAAA,CAACX,IAAI,CAAC2G,IAAI;UAAAb,QAAA,gBACRnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;cACXR,EAAE,EAAC,UAAU;cACbnD,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAEtC,QAAQ,CAACG,WAAY;cAC5B+F,QAAQ,EAAE/D,YAAa;cACvB+E,IAAI,EAAE,CAAE;cACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAACb;YAAY;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACmI,IAAI;cAACpC,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAElC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACZzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;cAACH,IAAI,EAAC,SAAS;cAAAjB,QAAA,EAClChE,MAAM,CAACb;YAAW;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eAEbzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACrCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;cACXR,EAAE,EAAC,UAAU;cACbnD,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAEtC,QAAQ,CAACI,WAAY;cAC5B8F,QAAQ,EAAE/D,YAAa;cACvB+E,IAAI,EAAE,CAAE;cACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAACZ;YAAY;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;cAACH,IAAI,EAAC,SAAS;cAAAjB,QAAA,EAClChE,MAAM,CAACZ;YAAW;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eAEbzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAa;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;cACXR,EAAE,EAAC,UAAU;cACbnD,IAAI,EAAC,cAAc;cACnBC,KAAK,EAAEtC,QAAQ,CAACK,YAAa;cAC7B6F,QAAQ,EAAE/D,YAAa;cACvB+E,IAAI,EAAE,CAAE;cACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAACX;YAAa;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;cAACH,IAAI,EAAC,SAAS;cAAAjB,QAAA,EAClChE,MAAM,CAACX;YAAY;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eAEbzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;YAACf,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;cAAAf,QAAA,EAAC;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;cACXR,EAAE,EAAC,UAAU;cACbnD,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAEtC,QAAQ,CAACM,WAAY;cAC5B4F,QAAQ,EAAE/D,YAAa;cACvB+E,IAAI,EAAE,CAAE;cACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAACV;YAAY;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;cAACH,IAAI,EAAC,SAAS;cAAAjB,QAAA,EAClChE,MAAM,CAACV;YAAW;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEPzF,OAAA,CAACX,IAAI;QAAC6F,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACpBnF,OAAA,CAACX,IAAI,CAAC0G,MAAM;UAACb,SAAS,EAAC,mDAAmD;UAAAC,QAAA,gBACxEnF,OAAA;YAAAmF,QAAA,EAAM;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvBzF,OAAA,CAACZ,MAAM;YAAC0H,OAAO,EAAEpD,iBAAkB;YAACmC,OAAO,EAAC,iBAAiB;YAAC0B,IAAI,EAAC,IAAI;YAAApC,QAAA,EAAC;UAExE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACdzF,OAAA,CAACX,IAAI,CAAC2G,IAAI;UAAAb,QAAA,GACPhE,MAAM,CAACP,SAAS,iBACfZ,OAAA,CAACV,KAAK;YAACuG,OAAO,EAAC,QAAQ;YAACX,SAAS,EAAC,MAAM;YAAAC,QAAA,EACrChE,MAAM,CAACP;UAAS;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CACR,EAEAtF,QAAQ,CAACS,SAAS,CAACmG,GAAG,CAAC,CAAC5C,QAAQ,EAAEZ,KAAK,kBACtCvD,OAAA,CAACX,IAAI;YAAa6F,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACvCnF,OAAA,CAACX,IAAI,CAAC0G,MAAM;cAACb,SAAS,EAAC,mDAAmD;cAAAC,QAAA,gBACxEnF,OAAA;gBAAIkF,SAAS,EAAC,MAAM;gBAAAC,QAAA,GAAC,aAAW,EAAC5B,KAAK,GAAG,CAAC;cAAA;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChDzF,OAAA;gBAAKkF,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACxCnF,OAAA,CAACb,IAAI,CAAC+H,KAAK;kBACTd,IAAI,EAAC,UAAU;kBACfe,KAAK,EAAC,SAAS;kBACfC,OAAO,EAAEjD,QAAQ,CAACpD,SAAU;kBAC5BsF,QAAQ,EAAEA,CAAA,KAAMtC,mBAAmB,CAACR,KAAK,CAAE;kBAC3CiE,MAAM;gBAAA;kBAAAlC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC,eACFzF,OAAA,CAACZ,MAAM;kBACLyG,OAAO,EAAC,gBAAgB;kBACxB0B,IAAI,EAAC,IAAI;kBACTT,OAAO,EAAEA,CAAA,KAAMnD,oBAAoB,CAACJ,KAAK,CAAE;kBAC3CkE,QAAQ,EAAEtH,QAAQ,CAACS,SAAS,CAACgD,MAAM,IAAI,CAAE;kBAAAuB,QAAA,EAC1C;gBAED;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,eACdzF,OAAA,CAACX,IAAI,CAAC2G,IAAI;cAAAb,QAAA,gBACRnF,OAAA,CAACb,IAAI,CAAC8G,KAAK;gBAACf,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;kBAAAf,QAAA,EAAC;gBAAK;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9BzF,OAAA,CAACb,IAAI,CAACgH,OAAO;kBACXR,EAAE,EAAC,UAAU;kBACblD,KAAK,EAAE0B,QAAQ,CAACtD,KAAM;kBACtBwF,QAAQ,EAAG9D,CAAC,IAAKe,oBAAoB,CAACC,KAAK,EAAE,OAAO,EAAEhB,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;kBACtE4E,IAAI,EAAE,CAAE;kBACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAAC,aAAaoC,KAAK,QAAQ;gBAAE;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjD,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;kBAACH,IAAI,EAAC,SAAS;kBAAAjB,QAAA,EAClChE,MAAM,CAAC,aAAaoC,KAAK,QAAQ;gBAAC;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC,eAEbzF,OAAA,CAACb,IAAI,CAAC8G,KAAK;gBAACf,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1BnF,OAAA,CAACb,IAAI,CAAC+G,KAAK;kBAAAf,QAAA,EAAC;gBAAe;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACxCzF,OAAA,CAACb,IAAI,CAACgH,OAAO;kBACXR,EAAE,EAAC,UAAU;kBACblD,KAAK,EAAE0B,QAAQ,CAACrD,MAAO;kBACvBuF,QAAQ,EAAG9D,CAAC,IAAKe,oBAAoB,CAACC,KAAK,EAAE,QAAQ,EAAEhB,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;kBACvE4E,IAAI,EAAE,CAAE;kBACRf,SAAS,EAAE,CAAC,CAACnF,MAAM,CAAC,aAAaoC,KAAK,SAAS;gBAAE;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClD,CAAC,eACFzF,OAAA,CAACb,IAAI,CAACgH,OAAO,CAACI,QAAQ;kBAACH,IAAI,EAAC,SAAS;kBAAAjB,QAAA,EAClChE,MAAM,CAAC,aAAaoC,KAAK,SAAS;gBAAC;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,GAjDHlC,KAAK;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkDV,CACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEPzF,OAAA;QAAKkF,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CnF,OAAA,CAACZ,MAAM;UACLyG,OAAO,EAAC,mBAAmB;UAC3BiB,OAAO,EAAEA,CAAA,KAAMlF,QAAQ,CAAC,aAAaD,EAAE,EAAE,CAAE;UAAAwD,QAAA,EAC5C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzF,OAAA,CAACZ,MAAM;UACLyG,OAAO,EAAC,SAAS;UACjBO,IAAI,EAAC,QAAQ;UACbqB,QAAQ,EAAEpG,YAAa;UAAA8D,QAAA,EAEtB9D,YAAY,GAAG,WAAW,GAAG;QAAc;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACvF,EAAA,CAjgBID,WAAW;EAAA,QAsBAR,SAAS,EACPD,WAAW,EACFK,OAAO;AAAA;AAAA6H,EAAA,GAxB7BzH,WAAW;AAmgBjB,eAAeA,WAAW;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}