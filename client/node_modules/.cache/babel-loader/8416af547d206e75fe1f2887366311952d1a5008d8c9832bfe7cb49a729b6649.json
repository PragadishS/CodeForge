{"ast":null,"code":"var _jsxFileName = \"/Users/pragadish/Code Forge/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Set axios default headers\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n      loadUser();\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n      setIsAuthenticated(false);\n      setUser(null);\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Load user if token exists\n  const loadUser = async () => {\n    try {\n      // Check if token is expired\n      if (isTokenExpired()) {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n        toast.error('Session expired. Please login again.');\n        setLoading(false);\n        return;\n      }\n      const res = await axios.get('/api/auth/me');\n      setUser(res.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error loading user:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async formData => {\n    try {\n      const res = await axios.post('/api/auth/register', formData);\n      setToken(res.data.token);\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      toast.success('Registration successful!');\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      const errorMessage = error.response && error.response.data.error ? error.response.data.error : 'Registration failed. Please try again.';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Login user\n  const login = async formData => {\n    try {\n      const res = await axios.post('/api/auth/login', formData);\n      setToken(res.data.token);\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      const errorMessage = error.response && error.response.data.error ? error.response.data.error : 'Login failed. Please check your credentials.';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('You have been logged out');\n  };\n\n  // Check if token is expired\n  const isTokenExpired = () => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp < Date.now() / 1000;\n    } catch (error) {\n      return true;\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n\n  // Check if user is the author of a resource\n  const isAuthor = authorId => {\n    return user && user._id === authorId;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      loading,\n      register,\n      login,\n      logout,\n      isTokenExpired,\n      isAdmin,\n      isAuthor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uRELQZxSUxfTiYK+RR1rK3EzG/E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jwtDecode","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","defaults","headers","common","loadUser","isTokenExpired","removeItem","error","res","get","data","console","register","formData","post","setItem","success","errorMessage","response","login","logout","info","decoded","exp","Date","now","isAdmin","role","isAuthor","authorId","_id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pragadish/Code Forge/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Set axios default headers\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n      loadUser();\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n      setIsAuthenticated(false);\n      setUser(null);\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Load user if token exists\n  const loadUser = async () => {\n    try {\n      // Check if token is expired\n      if (isTokenExpired()) {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n        toast.error('Session expired. Please login again.');\n        setLoading(false);\n        return;\n      }\n\n      const res = await axios.get('/api/auth/me');\n      setUser(res.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error loading user:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/register', formData);\n      setToken(res.data.token);\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      toast.success('Registration successful!');\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      const errorMessage = error.response && error.response.data.error\n        ? error.response.data.error\n        : 'Registration failed. Please try again.';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Login user\n  const login = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/login', formData);\n      setToken(res.data.token);\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      const errorMessage = error.response && error.response.data.error\n        ? error.response.data.error\n        : 'Login failed. Please check your credentials.';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('You have been logged out');\n  };\n\n  // Check if token is expired\n  const isTokenExpired = () => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp < Date.now() / 1000;\n    } catch (error) {\n      return true;\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n\n  // Check if user is the author of a resource\n  const isAuthor = (authorId) => {\n    return user && user._id === authorId;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        isAuthenticated,\n        loading,\n        register,\n        login,\n        logout,\n        isTokenExpired,\n        isAdmin,\n        isAuthor\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}